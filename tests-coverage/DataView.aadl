--------------------------------------------------------
--! File generated by asn2aadl v2.2-r6ab984d: DO NOT EDIT !
--------------------------------------------------------
--! MadeInFastMode:False:
--! InputASN1FileChecksum:09b52f77dae7f5ea05ba985e3f36ed90:DataTypesSimulink.asn:
--------------------------------------------------------

package DataView

public

DATA AType
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 10; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AType";
    TASTE::Position_In_File => [ line => 10 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END AType;

DATA IMPLEMENTATION AType.impl
END AType.impl;

DATA AType_Buffer_Max
END AType_Buffer_Max;

DATA IMPLEMENTATION AType_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AType
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END AType_Buffer_Max.impl;

DATA AType_Buffer
END AType_Buffer;

DATA IMPLEMENTATION AType_Buffer.impl
    -- Buffer to hold a marshalled data of type AType
SUBCOMPONENTS
    Buffer : data AType_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END AType_Buffer.impl;

DATA ConfigString
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 21; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ConfigString";
    TASTE::Position_In_File => [ line => 107 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END ConfigString;

DATA IMPLEMENTATION ConfigString.impl
END ConfigString.impl;

DATA ConfigString_Buffer_Max
END ConfigString_Buffer_Max;

DATA IMPLEMENTATION ConfigString_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ConfigString
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END ConfigString_Buffer_Max.impl;

DATA ConfigString_Buffer
END ConfigString_Buffer;

DATA IMPLEMENTATION ConfigString_Buffer.impl
    -- Buffer to hold a marshalled data of type ConfigString
SUBCOMPONENTS
    Buffer : data ConfigString_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
END ConfigString_Buffer.impl;

DATA E
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "E";
    TASTE::Position_In_File => [ line => 118 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END E;

DATA IMPLEMENTATION E.impl
END E.impl;

DATA E_Buffer_Max
END E_Buffer_Max;

DATA IMPLEMENTATION E_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type E
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END E_Buffer_Max.impl;

DATA E_Buffer
END E_Buffer;

DATA IMPLEMENTATION E_Buffer.impl
    -- Buffer to hold a marshalled data of type E
SUBCOMPONENTS
    Buffer : data E_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END E_Buffer.impl;

DATA FixedLenConfigString
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 6; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "FixedLenConfigString";
    TASTE::Position_In_File => [ line => 110 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END FixedLenConfigString;

DATA IMPLEMENTATION FixedLenConfigString.impl
END FixedLenConfigString.impl;

DATA FixedLenConfigString_Buffer_Max
END FixedLenConfigString_Buffer_Max;

DATA IMPLEMENTATION FixedLenConfigString_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type FixedLenConfigString
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END FixedLenConfigString_Buffer_Max.impl;

DATA FixedLenConfigString_Buffer
END FixedLenConfigString_Buffer;

DATA IMPLEMENTATION FixedLenConfigString_Buffer.impl
    -- Buffer to hold a marshalled data of type FixedLenConfigString
SUBCOMPONENTS
    Buffer : data FixedLenConfigString_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END FixedLenConfigString_Buffer.impl;

DATA MaximeNeedsEmptySequences
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 0; suggested aligned message buffer is...
    Source_Data_Size => 0 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MaximeNeedsEmptySequences";
    TASTE::Position_In_File => [ line => 139 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END MaximeNeedsEmptySequences;

DATA IMPLEMENTATION MaximeNeedsEmptySequences.impl
END MaximeNeedsEmptySequences.impl;

DATA MaximeNeedsEmptySequences_Buffer_Max
END MaximeNeedsEmptySequences_Buffer_Max;

DATA IMPLEMENTATION MaximeNeedsEmptySequences_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MaximeNeedsEmptySequences
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (0); -- Size of the buffer
    Source_Data_Size => 0 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MaximeNeedsEmptySequences_Buffer_Max.impl;

DATA MaximeNeedsEmptySequences_Buffer
END MaximeNeedsEmptySequences_Buffer;

DATA IMPLEMENTATION MaximeNeedsEmptySequences_Buffer.impl
    -- Buffer to hold a marshalled data of type MaximeNeedsEmptySequences
SUBCOMPONENTS
    Buffer : data MaximeNeedsEmptySequences_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
END MaximeNeedsEmptySequences_Buffer.impl;

DATA My2ndAType
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 10; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndAType";
    TASTE::Position_In_File => [ line => 10 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END My2ndAType;

DATA IMPLEMENTATION My2ndAType.impl
END My2ndAType.impl;

DATA My2ndAType_Buffer_Max
END My2ndAType_Buffer_Max;

DATA IMPLEMENTATION My2ndAType_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndAType
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndAType_Buffer_Max.impl;

DATA My2ndAType_Buffer
END My2ndAType_Buffer;

DATA IMPLEMENTATION My2ndAType_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndAType
SUBCOMPONENTS
    Buffer : data My2ndAType_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END My2ndAType_Buffer.impl;

DATA My2ndArr
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 56; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndArr";
    TASTE::Position_In_File => [ line => 73 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END My2ndArr;

DATA IMPLEMENTATION My2ndArr.impl
END My2ndArr.impl;

DATA My2ndArr_Buffer_Max
END My2ndArr_Buffer_Max;

DATA IMPLEMENTATION My2ndArr_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndArr
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Source_Data_Size => 56 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndArr_Buffer_Max.impl;

DATA My2ndArr_Buffer
END My2ndArr_Buffer;

DATA IMPLEMENTATION My2ndArr_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndArr
SUBCOMPONENTS
    Buffer : data My2ndArr_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 72 Bytes; -- Size of the buffer in bytes
END My2ndArr_Buffer.impl;

DATA My2ndBool
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndBool";
    TASTE::Position_In_File => [ line => 92 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END My2ndBool;

DATA IMPLEMENTATION My2ndBool.impl
END My2ndBool.impl;

DATA My2ndBool_Buffer_Max
END My2ndBool_Buffer_Max;

DATA IMPLEMENTATION My2ndBool_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndBool
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndBool_Buffer_Max.impl;

DATA My2ndBool_Buffer
END My2ndBool_Buffer;

DATA IMPLEMENTATION My2ndBool_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndBool
SUBCOMPONENTS
    Buffer : data My2ndBool_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END My2ndBool_Buffer.impl;

DATA My2ndEnumerated
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndEnumerated";
    TASTE::Position_In_File => [ line => 16 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END My2ndEnumerated;

DATA IMPLEMENTATION My2ndEnumerated.impl
END My2ndEnumerated.impl;

DATA My2ndEnumerated_Buffer_Max
END My2ndEnumerated_Buffer_Max;

DATA IMPLEMENTATION My2ndEnumerated_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndEnumerated
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndEnumerated_Buffer_Max.impl;

DATA My2ndEnumerated_Buffer
END My2ndEnumerated_Buffer;

DATA IMPLEMENTATION My2ndEnumerated_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndEnumerated
SUBCOMPONENTS
    Buffer : data My2ndEnumerated_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END My2ndEnumerated_Buffer.impl;

DATA My2ndInt
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndInt";
    TASTE::Position_In_File => [ line => 6 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END My2ndInt;

DATA IMPLEMENTATION My2ndInt.impl
END My2ndInt.impl;

DATA My2ndInt_Buffer_Max
END My2ndInt_Buffer_Max;

DATA IMPLEMENTATION My2ndInt_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndInt
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndInt_Buffer_Max.impl;

DATA My2ndInt_Buffer
END My2ndInt_Buffer;

DATA IMPLEMENTATION My2ndInt_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndInt
SUBCOMPONENTS
    Buffer : data My2ndInt_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END My2ndInt_Buffer.impl;

DATA My2ndReal
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndReal";
    TASTE::Position_In_File => [ line => 97 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END My2ndReal;

DATA IMPLEMENTATION My2ndReal.impl
END My2ndReal.impl;

DATA My2ndReal_Buffer_Max
END My2ndReal_Buffer_Max;

DATA IMPLEMENTATION My2ndReal_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndReal
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndReal_Buffer_Max.impl;

DATA My2ndReal_Buffer
END My2ndReal_Buffer;

DATA IMPLEMENTATION My2ndReal_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndReal
SUBCOMPONENTS
    Buffer : data My2ndReal_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END My2ndReal_Buffer.impl;

DATA My2ndString
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 20; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndString";
    TASTE::Position_In_File => [ line => 99 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END My2ndString;

DATA IMPLEMENTATION My2ndString.impl
END My2ndString.impl;

DATA My2ndString_Buffer_Max
END My2ndString_Buffer_Max;

DATA IMPLEMENTATION My2ndString_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndString
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndString_Buffer_Max.impl;

DATA My2ndString_Buffer
END My2ndString_Buffer;

DATA IMPLEMENTATION My2ndString_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndString
SUBCOMPONENTS
    Buffer : data My2ndString_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
END My2ndString_Buffer.impl;

DATA My2ndTypeNested
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 584; suggested aligned message buffer is...
    Source_Data_Size => 584 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndTypeNested";
    TASTE::Position_In_File => [ line => 24 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END My2ndTypeNested;

DATA IMPLEMENTATION My2ndTypeNested.impl
END My2ndTypeNested.impl;

DATA My2ndTypeNested_Buffer_Max
END My2ndTypeNested_Buffer_Max;

DATA IMPLEMENTATION My2ndTypeNested_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndTypeNested
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (584); -- Size of the buffer
    Source_Data_Size => 584 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndTypeNested_Buffer_Max.impl;

DATA My2ndTypeNested_Buffer
END My2ndTypeNested_Buffer;

DATA IMPLEMENTATION My2ndTypeNested_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndTypeNested
SUBCOMPONENTS
    Buffer : data My2ndTypeNested_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 600 Bytes; -- Size of the buffer in bytes
END My2ndTypeNested_Buffer.impl;

DATA MyInt
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyInt";
    TASTE::Position_In_File => [ line => 6 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END MyInt;

DATA IMPLEMENTATION MyInt.impl
END MyInt.impl;

DATA MyInt_Buffer_Max
END MyInt_Buffer_Max;

DATA IMPLEMENTATION MyInt_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyInt
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MyInt_Buffer_Max.impl;

DATA MyInt_Buffer
END MyInt_Buffer;

DATA IMPLEMENTATION MyInt_Buffer.impl
    -- Buffer to hold a marshalled data of type MyInt
SUBCOMPONENTS
    Buffer : data MyInt_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END MyInt_Buffer.impl;

DATA SubTypeWithOptional
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 80; suggested aligned message buffer is...
    Source_Data_Size => 80 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SubTypeWithOptional";
    TASTE::Position_In_File => [ line => 119 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END SubTypeWithOptional;

DATA IMPLEMENTATION SubTypeWithOptional.impl
END SubTypeWithOptional.impl;

DATA SubTypeWithOptional_Buffer_Max
END SubTypeWithOptional_Buffer_Max;

DATA IMPLEMENTATION SubTypeWithOptional_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SubTypeWithOptional
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (80); -- Size of the buffer
    Source_Data_Size => 80 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END SubTypeWithOptional_Buffer_Max.impl;

DATA SubTypeWithOptional_Buffer
END SubTypeWithOptional_Buffer;

DATA IMPLEMENTATION SubTypeWithOptional_Buffer.impl
    -- Buffer to hold a marshalled data of type SubTypeWithOptional
SUBCOMPONENTS
    Buffer : data SubTypeWithOptional_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 96 Bytes; -- Size of the buffer in bytes
END SubTypeWithOptional_Buffer.impl;

DATA SuperChoice
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 88; suggested aligned message buffer is...
    Source_Data_Size => 88 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SuperChoice";
    TASTE::Position_In_File => [ line => 130 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END SuperChoice;

DATA IMPLEMENTATION SuperChoice.impl
END SuperChoice.impl;

DATA SuperChoice_Buffer_Max
END SuperChoice_Buffer_Max;

DATA IMPLEMENTATION SuperChoice_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SuperChoice
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (88); -- Size of the buffer
    Source_Data_Size => 88 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END SuperChoice_Buffer_Max.impl;

DATA SuperChoice_Buffer
END SuperChoice_Buffer;

DATA IMPLEMENTATION SuperChoice_Buffer.impl
    -- Buffer to hold a marshalled data of type SuperChoice
SUBCOMPONENTS
    Buffer : data SuperChoice_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 104 Bytes; -- Size of the buffer in bytes
END SuperChoice_Buffer.impl;

DATA SuperRestrictedChoice
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 88; suggested aligned message buffer is...
    Source_Data_Size => 88 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SuperRestrictedChoice";
    TASTE::Position_In_File => [ line => 130 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END SuperRestrictedChoice;

DATA IMPLEMENTATION SuperRestrictedChoice.impl
END SuperRestrictedChoice.impl;

DATA SuperRestrictedChoice_Buffer_Max
END SuperRestrictedChoice_Buffer_Max;

DATA IMPLEMENTATION SuperRestrictedChoice_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SuperRestrictedChoice
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (88); -- Size of the buffer
    Source_Data_Size => 88 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END SuperRestrictedChoice_Buffer_Max.impl;

DATA SuperRestrictedChoice_Buffer
END SuperRestrictedChoice_Buffer;

DATA IMPLEMENTATION SuperRestrictedChoice_Buffer.impl
    -- Buffer to hold a marshalled data of type SuperRestrictedChoice
SUBCOMPONENTS
    Buffer : data SuperRestrictedChoice_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 104 Bytes; -- Size of the buffer in bytes
END SuperRestrictedChoice_Buffer.impl;

DATA T_ARR
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 56; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ARR";
    TASTE::Position_In_File => [ line => 73 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_ARR;

DATA IMPLEMENTATION T_ARR.impl
END T_ARR.impl;

DATA T_ARR_Buffer_Max
END T_ARR_Buffer_Max;

DATA IMPLEMENTATION T_ARR_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ARR
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Source_Data_Size => 56 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_ARR_Buffer_Max.impl;

DATA T_ARR_Buffer
END T_ARR_Buffer;

DATA IMPLEMENTATION T_ARR_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ARR
SUBCOMPONENTS
    Buffer : data T_ARR_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 72 Bytes; -- Size of the buffer in bytes
END T_ARR_Buffer.impl;

DATA T_ARR2
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 79; suggested aligned message buffer is...
    Source_Data_Size => 80 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ARR2";
    TASTE::Position_In_File => [ line => 77 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_ARR2;

DATA IMPLEMENTATION T_ARR2.impl
END T_ARR2.impl;

DATA T_ARR2_Buffer_Max
END T_ARR2_Buffer_Max;

DATA IMPLEMENTATION T_ARR2_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ARR2
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (80); -- Size of the buffer
    Source_Data_Size => 80 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_ARR2_Buffer_Max.impl;

DATA T_ARR2_Buffer
END T_ARR2_Buffer;

DATA IMPLEMENTATION T_ARR2_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ARR2
SUBCOMPONENTS
    Buffer : data T_ARR2_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 96 Bytes; -- Size of the buffer in bytes
END T_ARR2_Buffer.impl;

DATA T_ARR3
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 547; suggested aligned message buffer is...
    Source_Data_Size => 552 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ARR3";
    TASTE::Position_In_File => [ line => 79 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_ARR3;

DATA IMPLEMENTATION T_ARR3.impl
END T_ARR3.impl;

DATA T_ARR3_Buffer_Max
END T_ARR3_Buffer_Max;

DATA IMPLEMENTATION T_ARR3_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ARR3
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (552); -- Size of the buffer
    Source_Data_Size => 552 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_ARR3_Buffer_Max.impl;

DATA T_ARR3_Buffer
END T_ARR3_Buffer;

DATA IMPLEMENTATION T_ARR3_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ARR3
SUBCOMPONENTS
    Buffer : data T_ARR3_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 568 Bytes; -- Size of the buffer in bytes
END T_ARR3_Buffer.impl;

DATA T_ARR4
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 547; suggested aligned message buffer is...
    Source_Data_Size => 552 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ARR4";
    TASTE::Position_In_File => [ line => 81 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_ARR4;

DATA IMPLEMENTATION T_ARR4.impl
END T_ARR4.impl;

DATA T_ARR4_Buffer_Max
END T_ARR4_Buffer_Max;

DATA IMPLEMENTATION T_ARR4_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ARR4
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (552); -- Size of the buffer
    Source_Data_Size => 552 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_ARR4_Buffer_Max.impl;

DATA T_ARR4_Buffer
END T_ARR4_Buffer;

DATA IMPLEMENTATION T_ARR4_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ARR4
SUBCOMPONENTS
    Buffer : data T_ARR4_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 568 Bytes; -- Size of the buffer in bytes
END T_ARR4_Buffer.impl;

DATA T_BOOL
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-BOOL";
    TASTE::Position_In_File => [ line => 92 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END T_BOOL;

DATA IMPLEMENTATION T_BOOL.impl
END T_BOOL.impl;

DATA T_BOOL_Buffer_Max
END T_BOOL_Buffer_Max;

DATA IMPLEMENTATION T_BOOL_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_BOOL
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_BOOL_Buffer_Max.impl;

DATA T_BOOL_Buffer
END T_BOOL_Buffer;

DATA IMPLEMENTATION T_BOOL_Buffer.impl
    -- Buffer to hold a marshalled data of type T_BOOL
SUBCOMPONENTS
    Buffer : data T_BOOL_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_BOOL_Buffer.impl;

DATA T_FIXEDSTRING
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 15; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-FIXEDSTRING";
    TASTE::Position_In_File => [ line => 101 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END T_FIXEDSTRING;

DATA IMPLEMENTATION T_FIXEDSTRING.impl
END T_FIXEDSTRING.impl;

DATA T_FIXEDSTRING_Buffer_Max
END T_FIXEDSTRING_Buffer_Max;

DATA IMPLEMENTATION T_FIXEDSTRING_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_FIXEDSTRING
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_FIXEDSTRING_Buffer_Max.impl;

DATA T_FIXEDSTRING_Buffer
END T_FIXEDSTRING_Buffer;

DATA IMPLEMENTATION T_FIXEDSTRING_Buffer.impl
    -- Buffer to hold a marshalled data of type T_FIXEDSTRING
SUBCOMPONENTS
    Buffer : data T_FIXEDSTRING_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END T_FIXEDSTRING_Buffer.impl;

DATA T_INT
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-INT";
    TASTE::Position_In_File => [ line => 96 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_INT;

DATA IMPLEMENTATION T_INT.impl
END T_INT.impl;

DATA T_INT_Buffer_Max
END T_INT_Buffer_Max;

DATA IMPLEMENTATION T_INT_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_INT
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_INT_Buffer_Max.impl;

DATA T_INT_Buffer
END T_INT_Buffer;

DATA IMPLEMENTATION T_INT_Buffer.impl
    -- Buffer to hold a marshalled data of type T_INT
SUBCOMPONENTS
    Buffer : data T_INT_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_INT_Buffer.impl;

DATA T_META
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8776; suggested aligned message buffer is...
    Source_Data_Size => 8776 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-META";
    TASTE::Position_In_File => [ line => 49 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END T_META;

DATA IMPLEMENTATION T_META.impl
END T_META.impl;

DATA T_META_Buffer_Max
END T_META_Buffer_Max;

DATA IMPLEMENTATION T_META_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_META
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8776); -- Size of the buffer
    Source_Data_Size => 8776 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_META_Buffer_Max.impl;

DATA T_META_Buffer
END T_META_Buffer;

DATA IMPLEMENTATION T_META_Buffer.impl
    -- Buffer to hold a marshalled data of type T_META
SUBCOMPONENTS
    Buffer : data T_META_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 8792 Bytes; -- Size of the buffer in bytes
END T_META_Buffer.impl;

DATA T_POS
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8776; suggested aligned message buffer is...
    Source_Data_Size => 8776 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-POS";
    TASTE::Position_In_File => [ line => 49 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END T_POS;

DATA IMPLEMENTATION T_POS.impl
END T_POS.impl;

DATA T_POS_Buffer_Max
END T_POS_Buffer_Max;

DATA IMPLEMENTATION T_POS_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_POS
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8776); -- Size of the buffer
    Source_Data_Size => 8776 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_POS_Buffer_Max.impl;

DATA T_POS_Buffer
END T_POS_Buffer;

DATA IMPLEMENTATION T_POS_Buffer.impl
    -- Buffer to hold a marshalled data of type T_POS
SUBCOMPONENTS
    Buffer : data T_POS_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 8792 Bytes; -- Size of the buffer in bytes
END T_POS_Buffer.impl;

DATA T_POS_SET
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8992; suggested aligned message buffer is...
    Source_Data_Size => 8992 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-POS-SET";
    TASTE::Position_In_File => [ line => 61 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_POS_SET;

DATA IMPLEMENTATION T_POS_SET.impl
END T_POS_SET.impl;

DATA T_POS_SET_Buffer_Max
END T_POS_SET_Buffer_Max;

DATA IMPLEMENTATION T_POS_SET_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_POS_SET
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8992); -- Size of the buffer
    Source_Data_Size => 8992 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_POS_SET_Buffer_Max.impl;

DATA T_POS_SET_Buffer
END T_POS_SET_Buffer;

DATA IMPLEMENTATION T_POS_SET_Buffer.impl
    -- Buffer to hold a marshalled data of type T_POS_SET
SUBCOMPONENTS
    Buffer : data T_POS_SET_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 9008 Bytes; -- Size of the buffer in bytes
END T_POS_SET_Buffer.impl;

DATA T_REAL
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-REAL";
    TASTE::Position_In_File => [ line => 97 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END T_REAL;

DATA IMPLEMENTATION T_REAL.impl
END T_REAL.impl;

DATA T_REAL_Buffer_Max
END T_REAL_Buffer_Max;

DATA IMPLEMENTATION T_REAL_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_REAL
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_REAL_Buffer_Max.impl;

DATA T_REAL_Buffer
END T_REAL_Buffer;

DATA IMPLEMENTATION T_REAL_Buffer.impl
    -- Buffer to hold a marshalled data of type T_REAL
SUBCOMPONENTS
    Buffer : data T_REAL_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END T_REAL_Buffer.impl;

DATA T_SET
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 32; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-SET";
    TASTE::Position_In_File => [ line => 83 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_SET;

DATA IMPLEMENTATION T_SET.impl
END T_SET.impl;

DATA T_SET_Buffer_Max
END T_SET_Buffer_Max;

DATA IMPLEMENTATION T_SET_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_SET
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_SET_Buffer_Max.impl;

DATA T_SET_Buffer
END T_SET_Buffer;

DATA IMPLEMENTATION T_SET_Buffer.impl
    -- Buffer to hold a marshalled data of type T_SET
SUBCOMPONENTS
    Buffer : data T_SET_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 48 Bytes; -- Size of the buffer in bytes
END T_SET_Buffer.impl;

DATA T_SETOF
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 56; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-SETOF";
    TASTE::Position_In_File => [ line => 90 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_SETOF;

DATA IMPLEMENTATION T_SETOF.impl
END T_SETOF.impl;

DATA T_SETOF_Buffer_Max
END T_SETOF_Buffer_Max;

DATA IMPLEMENTATION T_SETOF_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_SETOF
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Source_Data_Size => 56 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_SETOF_Buffer_Max.impl;

DATA T_SETOF_Buffer
END T_SETOF_Buffer;

DATA IMPLEMENTATION T_SETOF_Buffer.impl
    -- Buffer to hold a marshalled data of type T_SETOF
SUBCOMPONENTS
    Buffer : data T_SETOF_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 72 Bytes; -- Size of the buffer in bytes
END T_SETOF_Buffer.impl;

DATA T_STRING
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 20; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-STRING";
    TASTE::Position_In_File => [ line => 99 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END T_STRING;

DATA IMPLEMENTATION T_STRING.impl
END T_STRING.impl;

DATA T_STRING_Buffer_Max
END T_STRING_Buffer_Max;

DATA IMPLEMENTATION T_STRING_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_STRING
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_STRING_Buffer_Max.impl;

DATA T_STRING_Buffer
END T_STRING_Buffer;

DATA IMPLEMENTATION T_STRING_Buffer.impl
    -- Buffer to hold a marshalled data of type T_STRING
SUBCOMPONENTS
    Buffer : data T_STRING_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
END T_STRING_Buffer.impl;

DATA T_TypeThatMustNotBeMappedExceptInPython
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 48; suggested aligned message buffer is...
    Source_Data_Size => 48 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-TypeThatMustNotBeMappedExceptInPython";
    TASTE::Position_In_File => [ line => 113 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_TypeThatMustNotBeMappedExceptInPython;

DATA IMPLEMENTATION T_TypeThatMustNotBeMappedExceptInPython.impl
END T_TypeThatMustNotBeMappedExceptInPython.impl;

DATA T_TypeThatMustNotBeMappedExceptInPython_Buffer_Max
END T_TypeThatMustNotBeMappedExceptInPython_Buffer_Max;

DATA IMPLEMENTATION T_TypeThatMustNotBeMappedExceptInPython_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_TypeThatMustNotBeMappedExceptInPython
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (48); -- Size of the buffer
    Source_Data_Size => 48 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_TypeThatMustNotBeMappedExceptInPython_Buffer_Max.impl;

DATA T_TypeThatMustNotBeMappedExceptInPython_Buffer
END T_TypeThatMustNotBeMappedExceptInPython_Buffer;

DATA IMPLEMENTATION T_TypeThatMustNotBeMappedExceptInPython_Buffer.impl
    -- Buffer to hold a marshalled data of type T_TypeThatMustNotBeMappedExceptInPython
SUBCOMPONENTS
    Buffer : data T_TypeThatMustNotBeMappedExceptInPython_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 64 Bytes; -- Size of the buffer in bytes
END T_TypeThatMustNotBeMappedExceptInPython_Buffer.impl;

DATA TypeEnumerated
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TypeEnumerated";
    TASTE::Position_In_File => [ line => 16 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END TypeEnumerated;

DATA IMPLEMENTATION TypeEnumerated.impl
END TypeEnumerated.impl;

DATA TypeEnumerated_Buffer_Max
END TypeEnumerated_Buffer_Max;

DATA IMPLEMENTATION TypeEnumerated_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TypeEnumerated
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TypeEnumerated_Buffer_Max.impl;

DATA TypeEnumerated_Buffer
END TypeEnumerated_Buffer;

DATA IMPLEMENTATION TypeEnumerated_Buffer.impl
    -- Buffer to hold a marshalled data of type TypeEnumerated
SUBCOMPONENTS
    Buffer : data TypeEnumerated_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END TypeEnumerated_Buffer.impl;

DATA TypeNested
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 584; suggested aligned message buffer is...
    Source_Data_Size => 584 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TypeNested";
    TASTE::Position_In_File => [ line => 24 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END TypeNested;

DATA IMPLEMENTATION TypeNested.impl
END TypeNested.impl;

DATA TypeNested_Buffer_Max
END TypeNested_Buffer_Max;

DATA IMPLEMENTATION TypeNested_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TypeNested
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (584); -- Size of the buffer
    Source_Data_Size => 584 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TypeNested_Buffer_Max.impl;

DATA TypeNested_Buffer
END TypeNested_Buffer;

DATA IMPLEMENTATION TypeNested_Buffer.impl
    -- Buffer to hold a marshalled data of type TypeNested
SUBCOMPONENTS
    Buffer : data TypeNested_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 600 Bytes; -- Size of the buffer in bytes
END TypeNested_Buffer.impl;

DATA TypeWithOptional
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 80; suggested aligned message buffer is...
    Source_Data_Size => 80 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TypeWithOptional";
    TASTE::Position_In_File => [ line => 119 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END TypeWithOptional;

DATA IMPLEMENTATION TypeWithOptional.impl
END TypeWithOptional.impl;

DATA TypeWithOptional_Buffer_Max
END TypeWithOptional_Buffer_Max;

DATA IMPLEMENTATION TypeWithOptional_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TypeWithOptional
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (80); -- Size of the buffer
    Source_Data_Size => 80 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TypeWithOptional_Buffer_Max.impl;

DATA TypeWithOptional_Buffer
END TypeWithOptional_Buffer;

DATA IMPLEMENTATION TypeWithOptional_Buffer.impl
    -- Buffer to hold a marshalled data of type TypeWithOptional
SUBCOMPONENTS
    Buffer : data TypeWithOptional_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 96 Bytes; -- Size of the buffer in bytes
END TypeWithOptional_Buffer.impl;

SYSTEM Taste_DataView
END    Taste_DataView;

SYSTEM IMPLEMENTATION Taste_DataView.others
SUBCOMPONENTS
   AType : DATA AType.impl;
   ConfigString : DATA ConfigString.impl;
   E : DATA E.impl;
   FixedLenConfigString : DATA FixedLenConfigString.impl;
   MaximeNeedsEmptySequences : DATA MaximeNeedsEmptySequences.impl;
   My2ndAType : DATA My2ndAType.impl;
   My2ndArr : DATA My2ndArr.impl;
   My2ndBool : DATA My2ndBool.impl;
   My2ndEnumerated : DATA My2ndEnumerated.impl;
   My2ndInt : DATA My2ndInt.impl;
   My2ndReal : DATA My2ndReal.impl;
   My2ndString : DATA My2ndString.impl;
   My2ndTypeNested : DATA My2ndTypeNested.impl;
   MyInt : DATA MyInt.impl;
   SubTypeWithOptional : DATA SubTypeWithOptional.impl;
   SuperChoice : DATA SuperChoice.impl;
   SuperRestrictedChoice : DATA SuperRestrictedChoice.impl;
   T_ARR : DATA T_ARR.impl;
   T_ARR2 : DATA T_ARR2.impl;
   T_ARR3 : DATA T_ARR3.impl;
   T_ARR4 : DATA T_ARR4.impl;
   T_BOOL : DATA T_BOOL.impl;
   T_FIXEDSTRING : DATA T_FIXEDSTRING.impl;
   T_INT : DATA T_INT.impl;
   T_META : DATA T_META.impl;
   T_POS : DATA T_POS.impl;
   T_POS_SET : DATA T_POS_SET.impl;
   T_REAL : DATA T_REAL.impl;
   T_SET : DATA T_SET.impl;
   T_SETOF : DATA T_SETOF.impl;
   T_STRING : DATA T_STRING.impl;
   T_TypeThatMustNotBeMappedExceptInPython : DATA T_TypeThatMustNotBeMappedExceptInPython.impl;
   TypeEnumerated : DATA TypeEnumerated.impl;
   TypeNested : DATA TypeNested.impl;
   TypeWithOptional : DATA TypeWithOptional.impl;
END Taste_DataView.others;
end DataView;
